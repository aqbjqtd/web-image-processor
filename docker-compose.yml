# Docker Compose配置文件 v3.0
# 基于现代Web技术的图像处理应用基础部署方案
# 支持WebAssembly、PWA和客户端图像处理

services:
  # 主应用服务
  web-image-processor:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VCS_REF=${VCS_REF:-$(git rev-parse --short HEAD 2>/dev/null || echo 'unknown')}
      target: runtime
    image: web-image-processor:3.0
    container_name: web-image-processor
    restart: unless-stopped
    entrypoint: []
    command: ["nginx", "-g", "daemon off;"]
    ports:
      - "${APP_PORT:-59000}:8080"
    environment:
      - NODE_ENV=production
      - TZ=${TZ:-Asia/Shanghai}
      - NGINX_WORKER_PROCESSES=${NGINX_WORKER_PROCESSES:-auto}
      - NGINX_WORKER_CONNECTIONS=${NGINX_WORKER_CONNECTIONS:-2048}
    volumes:
      - ./logs:/var/log/nginx:rw
      - nginx-cache:/var/cache/nginx:rw
      - nginx-tmp:/tmp/nginx:rw
    networks:
      - web-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/run:noexec,nosuid,size=100m


# 网络配置
networks:
  web-network:
    driver: bridge

# 数据卷
volumes:
  nginx-cache:
    driver: local
  nginx-tmp:
    driver: local

# 使用说明：
# 基础部署：docker-compose up -d
# 停止服务：docker-compose down
# 查看日志：docker-compose logs -f
# 重新构建：docker-compose build
# 应用访问地址：http://localhost:59000