# Prometheus配置文件 v3.0
# 基于知识图谱最佳实践的监控配置
# 支持Web图像处理应用的全面监控

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'web-image-processor-monitor'
    environment: 'production'

# 规则文件
rule_files:
  - "rules/*.yml"

# 告警管理器配置（可选）
# alerting:
#   alertmanagers:
#     - static_configs:
#         - targets: ['alertmanager:9093']

# 抓取配置
scrape_configs:
  # Prometheus自身监控
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter系统监控
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: ['__address__']
        target_label: instance
        replacement: 'web-image-processor-host'
        action: replace

  # Web应用监控（如果应用暴露metrics端点）
  - job_name: 'web-image-processor'
    static_configs:
      - targets: ['web-image-processor:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # Nginx监控（如果启用了nginx-prometheus-exporter）
  - job_name: 'nginx'
    static_configs:
      - targets: ['web-image-processor:9113']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Redis监控（如果启用了redis-exporter）
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Docker容器监控（如果启用了cAdvisor）
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Traefik监控
  - job_name: 'traefik'
    static_configs:
      - targets: ['traefik:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

# 存储配置（使用默认配置）
# storage:
#   tsdb:
#     path: /prometheus

# Web配置（使用默认配置）
# web:
#   console_libraries: /etc/prometheus/console_libraries
#   console_templates: /etc/prometheus/consoles
#   enable_lifecycle: true
#   enable_admin_api: true

# 远程写入配置（可选，用于长期存储）
# remote_write:
#   - url: "https://your-remote-storage/api/v1/write"
#     basic_auth:
#       username: "your-username"
#       password: "your-password"

# 远程读取配置（可选）
# remote_read:
#   - url: "https://your-remote-storage/api/v1/read"
#     basic_auth:
#       username: "your-username"
#       password: "your-password"