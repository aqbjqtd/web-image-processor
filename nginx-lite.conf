# 低配VPS专用Nginx配置 - 极致优化版本
# 内存占用 < 32MB，适用于512MB以下的VPS

# 全局设置
user nginx-app;
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 事件配置 - 最小化资源占用
events {
    worker_connections 256;
    use epoll;
    multi_accept off;
}

http {
    # 基础设置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志配置 - 简化格式减少I/O
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"';
    
    access_log /var/log/nginx/access.log main buffer=4k flush=5s;
    
    # 性能优化 - 低资源版本
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 20s;
    keepalive_requests 50;
    types_hash_max_size 1024;
    server_names_hash_bucket_size 64;
    
    # 客户端设置 - 适度限制
    client_max_body_size 50M;
    client_body_buffer_size 32k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 4k;
    client_body_timeout 20s;
    client_header_timeout 20s;
    send_timeout 20s;
    
    # Gzip压缩 - 平衡性能和资源
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 3;
    gzip_types
        text/plain
        text/css
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        image/svg+xml
        application/wasm;
    
    # 基础限流
    limit_req_zone $binary_remote_addr zone=api:512k rate=2r/s;
    limit_req_zone $binary_remote_addr zone=static:512k rate=10r/s;
    
    # 缓存设置
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   7d;
        application/javascript     7d;
        application/wasm          30d;
        ~image/                   30d;
    }
    
    server {
        listen 8080;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # 基础安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # 健康检查 - 使用静态文件
        location = /health {
            alias /usr/share/nginx/html/health.json;
            add_header Content-Type application/json;
            add_header Cache-Control "no-cache";
            access_log off;
        }
        
        location = /health.json {
            add_header Content-Type application/json;
            add_header Cache-Control "no-cache";
            access_log off;
        }
        
        # WebAssembly文件
        location ~* \.wasm$ {
            limit_req zone=static burst=3 nodelay;
            add_header Content-Type application/wasm;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # Service Worker
        location = /sw.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Service-Worker-Allowed "/";
        }
        
        # PWA Manifest
        location = /manifest.json {
            add_header Cache-Control "no-cache";
            add_header Content-Type application/manifest+json;
        }
        
        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
            limit_req zone=static burst=5 nodelay;
            expires $expires;
            add_header Cache-Control "public";
            add_header Vary "Accept-Encoding";
        }
        
        # 字体文件
        location ~* \.(woff|woff2|ttf|eot|otf)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }
        
        # 主应用路由 - SPA支持
        location / {
            try_files $uri $uri/ @fallback;
            expires $expires;
        }
        
        # SPA回退
        location @fallback {
            rewrite ^.*$ /index.html last;
        }
        
        # 隐藏敏感文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 错误页面
        error_page 404 /index.html;
        error_page 500 502 503 504 /index.html;
    }
}