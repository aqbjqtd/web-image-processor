# 低配VPS优化的Nginx配置
# 针对512MB-1GB内存的VPS优化

worker_processes 1;  # 减少worker进程数
error_log /var/log/nginx/error.log warn;
pid /tmp/nginx.pid;

events {
    worker_connections 512;  # 减少连接数
    use epoll;
    multi_accept off;  # 关闭多accept以节省内存
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 简化日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"';

    access_log /var/log/nginx/access.log main buffer=16k flush=5s;

    # 性能优化（低内存版本）
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30s;  # 减少keepalive时间
    keepalive_requests 100;  # 减少复用请求数
    types_hash_max_size 1024;
    server_names_hash_bucket_size 64;
    
    # 客户端配置（保守设置）
    client_max_body_size 100M;  # 减少最大上传大小
    client_body_buffer_size 64k;
    client_header_buffer_size 2k;
    large_client_header_buffers 2 8k;
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    # 简化Gzip设置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 4;  # 降低压缩级别以节省CPU
    gzip_types
        text/plain
        text/css
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        image/svg+xml
        application/wasm;

    # 基础限流（更宽松）
    limit_req_zone $binary_remote_addr zone=api:1m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=static:1m rate=20r/s;

    server {
        listen 8080;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # 基础安全头部
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # 健康检查端点
        location = /health {
            access_log off;
            return 200 '{"status":"healthy","version":"low-resource"}';
            add_header Content-Type application/json;
        }
        
        # WebAssembly文件
        location ~* \.wasm$ {
            limit_req zone=static burst=5 nodelay;
            add_header Content-Type application/wasm;
            expires 30d;
            add_header Cache-Control "public";
        }
        
        # Service Worker
        location = /sw.js {
            add_header Cache-Control "no-cache";
            add_header Service-Worker-Allowed "/";
        }
        
        # PWA Manifest
        location = /manifest.json {
            add_header Cache-Control "no-cache";
            add_header Content-Type application/manifest+json;
        }
        
        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp)$ {
            limit_req zone=static burst=10 nodelay;
            expires 7d;
            add_header Cache-Control "public";
        }
        
        # 字体文件
        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin "*";
        }
        
        # 主应用路由
        location / {
            try_files $uri $uri/ @fallback;
        }
        
        # SPA回退
        location @fallback {
            rewrite ^.*$ /index.html last;
        }
        
        # 禁止访问敏感文件
        location ~ /\. {
            deny all;
            access_log off;
        }
    }
}