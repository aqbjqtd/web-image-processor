# Nginx配置文件 v3.0 - 针对Web图像处理应用优化
# 基于知识图谱中的PWA和现代Web技术最佳实践
# 支持WebAssembly和高性能图像处理

worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /tmp/nginx.pid;

# 优化事件处理
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    worker_aio_requests 32;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 自定义MIME类型
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        application/wasm          max;
        ~image/                   max;
    }

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # 性能优化
    sendfile on;
    sendfile_max_chunk 1m;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75s;
    keepalive_requests 1000;
    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;
    
    # 客户端配置
    client_max_body_size 500M;  # 支持大图片批量上传
    client_body_buffer_size 128k;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 16k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;

    # 缓冲区优化
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Gzip压缩优化
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/x-component
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/x-font-ttf
        application/vnd.ms-fontobject
        font/opentype
        image/svg+xml
        image/x-icon
        application/wasm
        application/octet-stream;

    # Brotli压缩（如果可用）
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/xml image/svg+xml application/x-font-ttf image/vnd.microsoft.icon application/x-font-opentype application/json font/eot application/vnd.ms-fontobject application/javascript font/otf application/xml application/xhtml+xml text/javascript  application/x-javascript text/plain application/x-font-truetype application/xml+rss image/x-icon font/opentype text/css image/x-win-bitmap;

    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;

    # 上游服务器配置（为未来扩展预留）
    upstream backend {
        server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    server {
        listen 8080;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # 安全头部
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self'; worker-src 'self' blob:; child-src 'self' blob:;" always;
        
        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        # 健康检查端点
        location = /health {
            access_log off;
            return 200 '{"status":"healthy","timestamp":"$time_iso8601","version":"3.0"}';
            add_header Content-Type application/json;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
        
        # API代理（为未来扩展预留）
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # WebAssembly文件
        location ~* \.wasm$ {
            limit_req zone=static burst=10 nodelay;
            add_header Content-Type application/wasm;
            add_header Cross-Origin-Embedder-Policy require-corp;
            add_header Cross-Origin-Opener-Policy same-origin;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # 模型文件
        location ~* \.(bin|onnx|tflite|pb)$ {
            limit_req zone=static burst=5 nodelay;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Cross-Origin-Resource-Policy cross-origin;
        }
        
        # Service Worker
        location = /sw.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Service-Worker-Allowed "/";
            add_header Cross-Origin-Resource-Policy cross-origin;
        }
        
        # PWA Manifest
        location = /manifest.json {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Content-Type application/manifest+json;
        }
        
        # 静态资源缓存策略
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
            limit_req zone=static burst=20 nodelay;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }
        
        # 字体文件
        location ~* \.(woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }
        
        # 主应用路由（SPA支持）
        location / {
            try_files $uri $uri/ @fallback;
            expires $expires;
        }
        
        # SPA回退
        location @fallback {
            rewrite ^.*$ /index.html last;
        }
        
        # 禁止访问敏感文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}